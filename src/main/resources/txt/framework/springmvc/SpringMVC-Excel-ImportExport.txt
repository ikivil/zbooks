SpringMVC 上传下载 HelloWorld

0.前提是已经配置好SpringMVC环境

1.pom.xml中添加
	<dependency>
		<groupId>commons-fileupload</groupId>
		<artifactId>commons-fileupload</artifactId>
		<version>1.3.1</version>
	</dependency>
	<dependency>
		<groupId>org.apache.commons</groupId>
		<artifactId>commons-io</artifactId>
		<version>1.3.2</version>
	</dependency>

2.springmvc.xml配置文件添加
	<!-- SpringMVC 上传需要 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
		<property name="maxUploadSize" value="104857600"/>
		<property name="maxInMemorySize" value="4096"/>
	</bean>
3.jsp
	<h3>导入</h3>
	<form id="myform" action="BaseDataUpload/excelImport" enctype="multipart/form-data" method="post">
		<input type="file" name="fileSP" >
		<!-- <input type="submit" value="提交"> -->
	</form>
	<h3>导出</h3>
	<a href="BaseDataUpload/excelExport">导出</a>
	

4.Controller
	@RequestMapping(value="/BaseDataUpload/excelsp",method=RequestMethod.POST)
	public String excelImport(@RequestParam("fileSP") MultipartFile[] files,Model model){
		RespDto r=null;
		// 判断file数组不能为空并且长度大于0
		if (files != null && files.length > 0) {
			// 文件目录 文件名 列表
			List<Map<String,String>> list = new ArrayList<Map<String,String>>();
			// 循环获取file数组中得文件
			for (int i = 0; i < files.length; i++) {
				MultipartFile file = files[i];
				//1. 保存文件
				Map<String,String> map = saveFile(file);
				//2.将保存的多个文件的 文件目录 文件名，放入List
				list.add(map);
			}
			// 调用 Service处理业务逻辑
			r = this.baseDataUploadService.excelImport(list);
		}
		model.addAttribute("msgCn", r.getRows());
		return "settings/basicdata/upload";
	}	
	
	/**
	 * 保存方法
	 * @param file
	 * @return filePath
	 */
	private Map<String,String> saveFile(MultipartFile file) {
		// 判断文件是否为空
		String fileDir ="";
		String fileName="";
		String filePath="";
		Map<String,String> map = new HashMap<String,String>();
		if (!file.isEmpty()) {
			try {
				
				fileDir = request.getSession().getServletContext().getRealPath("/")+ "upload/";// 文件保存路径
				fileName = file.getOriginalFilename(); // 文件保存名使用原始文件名
				filePath = fileDir + fileName;

				// 判断保存的目录是否存在，不存在则创建目录
				File dirFile = new File(fileDir);
				if (!dirFile.exists()) {
					logger.debug("未找到上传目录，创建目录。");
					dirFile.mkdir();
				}
				// 转存文件
				file.transferTo(new File(filePath));
				//return filePath;
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		map.put("fileDir", fileDir);
		map.put("fileName", fileName);
		return map;
	}